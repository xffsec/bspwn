# sxhkdrc

# wm independent hotkeys
# --- custom bindings ---

# Thunar
#super + F4
#  thunar

# toggle touchpad

# Toggle Touchpad
super + e
    enabled=$(xinput list-props 'SynPS/2 Synaptics TouchPad'  | grep 'Device Enabled'|tr -d "\t"|cut -d ":" -f2); \
    if [ "$enabled" -eq 1 ]; then \
        xinput disable 'SynPS/2 Synaptics TouchPad'; \
        notify-send -u low "Touchpad: DISABLED"; \
    else \
        xinput enable 'SynPS/2 Synaptics TouchPad'; \
        notify-send -u low "Touchpad: ENABLED"; \
    fi

# firefox
super + shift + f
  firefox

# terminal emulator
super + Return
	kitty

# program launcher
super + d
	rofi -show drun -theme "$HOME/.config/rofi/launch.rasi"

#switch between window
super + Tab
  rofi -show window -selected-row 1 -theme "$HOME/.config/rofi/launch.rasi"
# run program
super + r
  rofi -show run -theme "$HOME/.config/rofi/launch.rasi"

# file explorer (rofi)
#super + f
#  rofi -show filebrowser -theme "$HOME/.config/rofi/launch.rasi"

# Reload sxhkd (with status checking)
alt + shift + Escape
# pkill -USR1 -x sxhkd ; sleep 1 ; sxhkd
    if pkill -USR1 -x sxhkd 2>/dev/null; then
        notify-send "sxhkd" "Configuration reloaded!"
    else
        killall sxhkd 2>/dev/null
        sxhkd &
        if pgrep -x sxhkd >/dev/null; then
            notify-send "sxhkd" "Full restart completed!"
        else
            notify-send "sxhkd" "RESTART FAILED!" -u critical
            # Emergency fallback - try starting once more
            sxhkd &
        fi
    fi

#reload bspwm
super + Escape
  bspc wm -r

# Toggle focus follows pointer
super + p
    current_state=$(bspc config focus_follows_pointer); \
    if [ "$current_state" = "true" ]; then \
        bspc config focus_follows_pointer false; \
        notify-send -u low "Focus Follows Pointer: OFF"; \
    else \
        bspc config focus_follows_pointer true; \
        notify-send -u low "Focus Follows Pointer: ON"; \
    fi

super + shift + escape
  process_name="dbus-daemon"; \
  if pgrep -x "$process_name" > /dev/null; then \
    echo "Restarting $process_name..."; \
    killall "$process_name" 2> /dev/null; \
    pkill -9 "$process_name" 2> /dev/null; \
    sleep 0.5; \
  fi; \
  bspc wm -r 

#selects a region & saves
Print
  flameshot gui

#selects a region & copies it to clipboard
ctrl + Print
	$HOME/.config/sxhkd/scripts/scc.sh -r -c ; notify-send -u low 'screenshot: copied region to clipboard' -t 777

#takes a full screenshot & saves
alt + Print
	$HOME/.config/sxhkd/scripts/scc.sh $HOME/Pictures/Screenshots/ ; notify-send -u low 'screenshot: saved desktop' -t 777


#next prev desktop workspace
super + {Left,Right}
	bspc desktop --focus {prev,next}

#switch window between previous and next workspace
super + alt +  {Left,Right}
	bspc node -d {prev,next} -f  

#rotate
super + shift + r
	bspc node @/ -R 90

#lock the screen
super + x 
  slock && pamixer -t
  #betterlockscreen -l -q
  #dm-tool lock
  #/bin/xfce4-screensaver-command --lock
  #$HOME/.config/sxhkd/scripts/lockscreen

#brightness volume microphone etc...

#XF86AudioRaiseVolume
#  pamixer -i 5

#XF86AudioLowerVolume
#	pamixer -d 5	

#XF86AudioMute
#	pamixer -t

#XF86MonBrightnessUp
#         brightnessctl s +10%

#XF86MonBrightnessDown
#         brightnessctl s 10%-

XF86AudioMicMute
	$HOME/.config/sxhkd/scripts/micvol.sh toggle
#	pactl set-source-mute 1 toggle


XF86AudioRaiseVolume
  pamixer -i 5 && \
  VOL=$(pamixer --get-volume) && \
  notify-send -u low -h string:x-canonical-private-synchronous:volume "Volume: $VOL%" -h int:value:$VOL -t 1000

XF86AudioLowerVolume
  pamixer -d 5 && \
  VOL=$(pamixer --get-volume) && \
  notify-send -u low -h string:x-canonical-private-synchronous:volume "Volume: $VOL%" -h int:value:$VOL -t 1000

XF86AudioMute
  pamixer -t && \
  if [ $(pamixer --get-mute) = "true" ]; then \
    notify-send -u low -h string:x-canonical-private-synchronous:volume "Muted: î¬¤" -t 1000; \
  else \
    VOL=$(pamixer --get-volume) && \
    notify-send -u low -h string:x-canonical-private-synchronous:volume "Volume: $VOL%" -h int:value:$VOL -t 1000; \
  fi

XF86MonBrightnessUp
  brightnessctl s +10% && \
  BRIGHT=$(brightnessctl g) && \
  MAX=$(brightnessctl m) && \
  PERCENT=$((BRIGHT * 100 / MAX)) && \
  notify-send -u low -h string:x-canonical-private-synchronous:brightness "Brightness: $PERCENT%" -h int:value:$PERCENT -t 1000

XF86MonBrightnessDown
  brightnessctl s 10%- && \
  BRIGHT=$(brightnessctl g) && \
  MAX=$(brightnessctl m) && \
  PERCENT=$((BRIGHT * 100 / MAX)) && \
  notify-send -u low -h string:x-canonical-private-synchronous:brightness "Brightness: $PERCENT%" -h int:value:$PERCENT -t 1000





#============BSPWM HOTKEYS==============

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + q
	bspc node -c

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#=====================STATE FLAGS======================

# set the window state
super + {t,shift + t,f}
	bspc node -t {tiled,pseudo_tiled,fullscreen}

super + s 
  "$HOME/.config/sxhkd/scripts/floating.sh"

super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
#=====================FOCUS SWAP=======================
#
# focus the node in the given direction

super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
#super + {grave,Tab}
#	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#==============PRESELECT THE WINDOW================


# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#=================== MOVE / RESIZE ========================


# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window

super + shift + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

