# Alacritty Configuration
# Place this file at ~/.config/alacritty/alacritty.toml

[env]
TERM = "xterm-256color"

[window]
# Window dimensions (columns x lines)
dimensions = { columns = 123, lines = 40 }

# Window padding
padding = { x = 15, y = 15 }

# Disable window decorations
decorations = "full"

# Startup mode
startup_mode = "Windowed"

# Window title
title = "Alacritty"

# Dynamic title
dynamic_title = true

[scrolling]
# Maximum number of lines in the scrollback buffer
history = 10000

# Scrolling multiplier
multiplier = 3

[font]
# Normal font
normal = { family = "0xProto Nerd Font Mono", style = "Regular" }

# Bold font
bold = { family = "0xProto Nerd Font Mono", style = "Regular" }

# Italic font
italic = { family = "0xProto Nerd Font Mono", style = "Italic" }

# Bold italic font
bold_italic = { family = "0xProto Nerd Font Mono", style = "Italic" }

# Font size
size = 14.0

# Offset adjustments
offset = { x = 0, y = 0 }

# Glyph offset
glyph_offset = { x = 0, y = 0 }

# Use built-in font for box drawing characters
builtin_box_drawing = false

[colors]
# Default colors
[colors.primary]
background = "#171717"
foreground = "#B3B1AD"

# Cursor colors
[colors.cursor]
text = "#171717"
cursor = "#E6B450"

# Selection colors
[colors.selection]
text = "#59C2FF"
background = "#2D3F76"

# Normal colors
[colors.normal]
black   = "#0A0E14"
red     = "#FF3333"
green   = "#C2D94C"
yellow  = "#FF8F40"
blue    = "#59C2FF"
magenta = "#FFEE99"
cyan    = "#95E6CB"
white   = "#B3B1AD"

# Bright colors
[colors.bright]
black   = "#4D5566"
red     = "#FF3333"
green   = "#C2D94C"
yellow  = "#FF8F40"
blue    = "#59C2FF"
magenta = "#FFEE99"
cyan    = "#95E6CB"
white   = "#B3B1AD"

[bell]
# Visual bell animation
animation = "Linear"
duration = 0
color = "#171717"

# Command executed on bell
command = "None"

[selection]
# Characters that are used as separators for "semantic words"
semantic_escape_chars = ",│`|:\"' ()[]{}<>\t"

# When set to true, selected text will be copied to the primary clipboard
save_to_clipboard = true

[cursor]
# Cursor style
style = { shape = "Block", blinking = "Off" }

# Cursor blinking interval in milliseconds
blink_interval = 750

# If true, the cursor will be rendered as a hollow box when unfocused
unfocused_hollow = true

# Thickness of the cursor relative to cell width
thickness = 0.15

[terminal]

# Controls the OSC 52 behavior for clipboard interactions
osc52 = "CopyPaste"

[mouse]
# Hide mouse cursor when typing
hide_when_typing = false

# Mouse bindings
[[mouse.bindings]]
mouse = "Middle"
action = "PasteSelection"

[hints]
# Hints can be used to find text or hyperlinks in the visible part of the terminal
[[hints.enabled]]
command = "xdg-open"
hyperlinks = true
post_processing = true
persist = false
mouse.enabled = true
binding = { key = "U", mods = "Control|Shift" }
regex = "(ipfs:|ipns:|magnet:|mailto:|gemini://|gopher://|https://|http://|news:|file:|git://|ssh:|ftp://)[^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"

[keyboard]
# Keyboard bindings
bindings = [
    # Copy/Paste
    { key = "C", mods = "Control|Shift", action = "Copy" },
    { key = "V", mods = "Control|Shift", action = "Paste" },
    { key = "Insert", mods = "Shift", action = "PasteSelection" },
    
    # Scrolling
    { key = "Up", mods = "Control|Shift", action = "ScrollLineUp" },
    { key = "Down", mods = "Control|Shift", action = "ScrollLineDown" },
    { key = "PageUp", mods = "Control|Shift", action = "ScrollPageUp" },
    { key = "PageDown", mods = "Control|Shift", action = "ScrollPageDown" },
    { key = "Home", mods = "Control|Shift", action = "ScrollToTop" },
    { key = "End", mods = "Control|Shift", action = "ScrollToBottom" },
    
    # Font size adjustment
    { key = "Minus", mods = "Control|Shift", action = "DecreaseFontSize" },
    { key = "Plus", mods = "Control|Shift", action = "IncreaseFontSize" },
    { key = "Key0", mods = "Control|Shift", action = "ResetFontSize" },
    
    # Quit
    { key = "Q", mods = "Control|Shift", action = "Quit" },
    
    # Clear screen and scrollback
    { key = "L", mods = "Control", chars = "\f" },
]

[debug]
# Display the time it takes to draw each frame
render_timer = false

# Keep the log file after quitting
persistent_logging = false

# Log level
log_level = "Warn"

# Print all received window events
print_events = false
