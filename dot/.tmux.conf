#Optimized for vim-like navigation and keyboard-only usage

#Change the prefix from 'C-b' to 'C-s'
#unbind C-b
#set-option -g prefix C-s
#bind-key C-s send-prefix

# split lines colors

set -g pane-border-style fg="#2c2c2c"
set -g pane-active-border-style fg="red"

#Set default terminal for proper colors
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

#Enable mouse support (optional, but helpful when needed)
#set -g mouse off
bind-key -n M-m run-shell "tmux set -g mouse \$(tmux show -g mouse | grep -q 'on' && echo 'off' || echo 'on') && tmux display \"Mouse mode: \$(tmux show -g mouse | cut -d' ' -f2)\""


#Start window numbering at 1
set -g base-index 1
setw -g pane-base-index 1

#Renumber windows when one is closed
set -g renumber-windows on

#Increase history limit
set -g history-limit 50000

#Reduce escape-time (helps with vim)
set -g escape-time 10

#Enable focus events
set -g focus-events on

#Set status bar update interval
set -g status-interval 5

#Activity monitoring
setw -g monitor-activity on
set -g visual-activity off

#====== Key Bindings ======

#Reload config file
bind r source-file ~/.tmux.conf \; display "Config reloaded!"
bind-key -n M-r source-file ~/.tmux.conf \; display "Config reloaded!"

#===== Window Management =====
#Create new window with current directory
bind t new-window -c "#{pane_current_path}"
bind-key -n M-t new-window -c "#{pane_current_path}"

bind-key -n "M-{" swap-window -d -t -1
bind-key -n "M-}" swap-window -d -t +1


#Switch windows using Alt+number (without prefix)
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

#Next/previous window (with prefix)
#bind "{" next-window
#bind "}" previous-window

#Next/previous window (without prefix, Alt+h/l like vim)
bind-key -n "M-Left" previous-window
bind-key -n "M-Right" next-window

bind-key -n "M-a" previous-window
bind-key -n "M-d" next-window

#Quick window selection
bind-key w choose-tree -Zw

#Rename window
bind-key -n "M-e" command-prompt -I "#W" "rename-window '%%'"

#Kill window
bind w confirm-before -p "Kill window #W? (y/n)" kill-window
bind-key -n M-q confirm-before kill-window

#===== Pane Management =====
#Split panes using | and - (intuitive)
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind-key -n "M-|" split-window -h -c "#{pane_current_path}"
bind-key -n "M--" split-window -v -c "#{pane_current_path}"

#Vim-like pane navigation (without prefix, using Alt)
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n M-j select-pane -D
bind-key -n M-k select-pane -U

#Resize panes (with prefix)
bind-key -n M-H resize-pane -L 5
bind-key -n M-J resize-pane -D 5
bind-key -n M-K resize-pane -U 5
bind-key -n M-L resize-pane -R 5

#Toggle between panes (like Alt-Tab)
bind-key -n M-Tab last-pane

#Swap/Switch panes
bind-key -n M-, swap-pane -U
bind-key -n M-. swap-pane -D


#Break pane to new window
bind b break-pane

#Kill pane
bind-key -n M-x confirm-before kill-pane
bind-key -n M-w confirm-before kill-pane
#bind-key -n M-w confirm-before kill-pane

#Zoom pane
bind-key -n M-z resize-pane -Z
bind-key -n M-o resize-pane -Z

#===== Copy Mode (Vi Mode) =====
#Vi mode
setw -g mode-keys vi

#Enter copy mode
bind Escape copy-mode

#Copy mode key bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle


#Fix PageUp/PageDown behavior
unbind -n PPage  #Remove PageUp binding
unbind -n NPage  #Remove PageDown binding

#Search in copy mode (forward and backward)
bind-key -T copy-mode-vi / command-prompt -i -p "Search forward:" "send -X search-forward-incremental \"%%%\""
bind-key -T copy-mode-vi ? command-prompt -i -p "Search backward:" "send -X search-backward-incremental \"%%%\""

#Move by words in copy mode
bind-key -T copy-mode-vi b send-keys -X previous-word
bind-key -T copy-mode-vi w send-keys -X next-word
bind-key -T copy-mode-vi e send-keys -X next-word-end

#Quick access to copy mode
bind-key -n M-v copy-mode

#Paste buffer
bind p paste-buffer

#Choose which buffer to paste
bind P choose-buffer

#===== Session Management =====
#Create new session
bind S command-prompt -p "New session name:" "new-session -s '%%'"

#Switch sessions
bind s choose-tree -Zs

#Detach from session
bind d detach-client

#===== Status Bar Configuration =====
#Status bar position
set-option -g status-position top

#Status bar style
set -g status-style bg="#24282e",fg="#636c7d"

#Window status format
set -g window-status-format " #I:#W "
set -g window-status-current-format " #I:#W "
#set -g window-status-current-style bg="",fg=white
set -g window-status-current-style fg=red

#Left status
set -g status-left-length 50
set -g status-left "[#S]"

#Right status
set -g status-right-length 100
set -g status-right "%H:%M %d-%b-%y"

#Message style
set -g message-style bg=orange,fg=black

#===== Additional Bindings =====
#Open clock
bind-key T clock-mode

#Clear screen and history (like Ctrl+L in bash)
bind C-l send-keys -R \; clear-history

#Toggle status bar visibility
bind-key C-s set-option -g status


#===== Misc =====
bind-key -n M-space next-layout

#===== System-specific configurations =====
#Linux clipboard support with xclip (uncomment if needed)
#bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
#bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

#Set terminal window title
set-option -g set-titles on
set-option -g set-titles-string "#S / #W"

#Source local config if it exists
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'
